# Generated by Django 2.2 on 2019-10-24 02:41

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [("speciesinfo", "0001_initial")]

    operations = [
        migrations.CreateModel(
            name="AirtableImportLog",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("time", models.DateTimeField(null=True)),
                ("city", models.CharField(max_length=25, null=True)),
                ("end_num", models.IntegerField(null=True)),
                ("first_reports", models.IntegerField(null=True)),
                ("confirmations", models.IntegerField(null=True)),
                ("conflicts", models.IntegerField(null=True)),
                ("errors", models.IntegerField(null=True)),
                ("duplicates", models.IntegerField(null=True)),
                ("total_import_count", models.IntegerField(null=True)),
            ],
            options={"db_table": "airtable_import_log"},
        ),
        migrations.CreateModel(
            name="NstAdminEmail",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=90, null=True)),
                ("shortname", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "e_mail",
                    models.CharField(
                        blank=True, db_column="e-mail", max_length=90, null=True
                    ),
                ),
                ("is_bot", models.PositiveSmallIntegerField(null=True)),
            ],
            options={"db_table": "nst_admin_email"},
        ),
        migrations.CreateModel(
            name="NstCombinedRegion",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=222)),
            ],
            options={"db_table": "nst_combined_region"},
        ),
        migrations.CreateModel(
            name="NstLocation",
            fields=[
                (
                    "nestID",
                    models.AutoField(
                        db_column="nest_id", primary_key=True, serialize=False
                    ),
                ),
                ("official_name", models.CharField(max_length=222)),
                ("short_name", models.CharField(blank=True, max_length=222, null=True)),
                ("address", models.CharField(blank=True, max_length=234, null=True)),
                ("notes", models.CharField(blank=True, max_length=234, null=True)),
                ("private", models.BooleanField(blank=True, null=True)),
                (
                    "permanent_species",
                    models.CharField(blank=True, max_length=111, null=True),
                ),
                ("lat", models.FloatField(blank=True, null=True)),
                ("lon", models.FloatField(blank=True, null=True)),
                ("size", models.IntegerField(blank=True, null=True)),
                ("density", models.IntegerField(blank=True, null=True)),
                ("primary_silph_id", models.IntegerField(blank=True, null=True)),
                (
                    "osm_id",
                    models.IntegerField(blank=True, db_column="OSM_id", null=True),
                ),
                (
                    "duplicate_of",
                    models.ForeignKey(
                        db_column="duplicate_of",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="nestlist.NstLocation",
                    ),
                ),
            ],
            options={"db_table": "nst_location"},
        ),
        migrations.CreateModel(
            name="NstMetropolisMajor",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(db_column="Name", max_length=123)),
                (
                    "short_name",
                    models.CharField(
                        blank=True, db_column="Shortname", max_length=88, null=True
                    ),
                ),
                ("lat", models.FloatField(blank=True, null=True)),
                ("lon", models.FloatField(blank=True, null=True)),
                ("note", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "admin_names",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "airtable_base_id",
                    models.CharField(blank=True, max_length=30, null=True),
                ),
                ("active", models.BooleanField(default=False)),
                (
                    "airtable_bot",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="nestlist.NstAdminEmail",
                    ),
                ),
            ],
            options={"db_table": "nst_metropolis_major"},
        ),
        migrations.CreateModel(
            name="NstParkSystem",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=123)),
                ("website", models.CharField(blank=True, max_length=234, null=True)),
            ],
            options={"db_table": "nst_park_system"},
        ),
        migrations.CreateModel(
            name="NstRotationDate",
            fields=[
                ("num", models.AutoField(primary_key=True, serialize=False)),
                ("date", models.DateTimeField()),
                (
                    "special_note",
                    models.CharField(blank=True, max_length=123, null=True),
                ),
            ],
            options={"db_table": "nst_rotation_dates"},
        ),
        migrations.CreateModel(
            name="NstSpeciesListArchive",
            fields=[
                (
                    "species_txt",
                    models.CharField(blank=True, max_length=111, null=True),
                ),
                (
                    "species_no",
                    models.IntegerField(blank=True, db_column="species_no", null=True),
                ),
                (
                    "confirmation",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "id",
                    models.AutoField(
                        db_column="django_sequence_id",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "special_notes",
                    models.CharField(blank=True, max_length=111, null=True),
                ),
                (
                    "last_mod_by",
                    models.ForeignKey(
                        db_column="last_mod_by",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="nestlist.NstAdminEmail",
                    ),
                ),
                (
                    "nestid",
                    models.ForeignKey(
                        db_column="nestid",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="nestlist.NstLocation",
                    ),
                ),
                (
                    "rotation_num",
                    models.ForeignKey(
                        db_column="rotation_num",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="nestlist.NstRotationDate",
                    ),
                ),
                (
                    "species_name_fk",
                    models.ForeignKey(
                        blank=True,
                        db_column="django_pkmn_key",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="speciesinfo.Pokemon",
                    ),
                ),
            ],
            options={
                "db_table": "nst_species_list_archive",
                "unique_together": {("rotation_num", "nestid")},
            },
        ),
        migrations.AddField(
            model_name="nstrotationdate",
            name="date_list",
            field=models.ManyToManyField(
                through="nestlist.NstSpeciesListArchive", to="nestlist.NstLocation"
            ),
        ),
        migrations.CreateModel(
            name="NstRawRpt",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("user_name", models.CharField(max_length=120, null=True)),
                (
                    "server_name",
                    models.CharField(blank=True, max_length=120, null=True),
                ),
                ("nsla_pk_unlink", models.IntegerField(default=0)),
                ("timestamp", models.DateTimeField(null=True)),
                ("foreign_db_row_num", models.IntegerField(null=True)),
                ("raw_species_num", models.CharField(max_length=120, null=True)),
                (
                    "raw_park_info",
                    models.CharField(blank=True, max_length=120, null=True),
                ),
                ("action", models.IntegerField(null=True)),
                (
                    "attempted_dex_num",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="speciesinfo.Pokemon",
                    ),
                ),
                (
                    "bot",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="nestlist.NstAdminEmail",
                    ),
                ),
                (
                    "calculated_rotation",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="nestlist.NstRotationDate",
                    ),
                ),
                (
                    "nsla_pk",
                    models.ForeignKey(
                        db_column="nsla_pk",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="nestlist.NstSpeciesListArchive",
                    ),
                ),
                (
                    "parklink",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="nestlist.NstLocation",
                    ),
                ),
            ],
            options={"db_table": "nst_raw_rpt"},
        ),
        migrations.CreateModel(
            name="NstNeighborhood",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=222)),
                ("lat", models.FloatField(blank=True, null=True)),
                ("lon", models.FloatField(blank=True, null=True)),
                (
                    "major_city",
                    models.ForeignKey(
                        blank=True,
                        db_column="major_city",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="nestlist.NstMetropolisMajor",
                    ),
                ),
                (
                    "region",
                    models.ManyToManyField(blank=True, to="nestlist.NstCombinedRegion"),
                ),
            ],
            options={"db_table": "nst_neighborhood"},
        ),
        migrations.AddField(
            model_name="nstlocation",
            name="neighborhood",
            field=models.ForeignKey(
                blank=True,
                db_column="location",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="nestlist.NstNeighborhood",
            ),
        ),
        migrations.AddField(
            model_name="nstlocation",
            name="park_system",
            field=models.ForeignKey(
                db_column="park_system",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="nestlist.NstParkSystem",
            ),
        ),
        migrations.AddField(
            model_name="nstlocation",
            name="resident_history",
            field=models.ManyToManyField(
                through="nestlist.NstSpeciesListArchive", to="nestlist.NstRotationDate"
            ),
        ),
        migrations.CreateModel(
            name="NstAltName",
            fields=[
                ("name", models.CharField(max_length=222)),
                ("hide_me", models.BooleanField(db_column="hideme", default=False)),
                (
                    "id",
                    models.AutoField(
                        db_column="dj_key", primary_key=True, serialize=False
                    ),
                ),
                (
                    "main_entry",
                    models.ForeignKey(
                        db_column="main_entry",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="alternate_name",
                        to="nestlist.NstLocation",
                    ),
                ),
            ],
            options={"db_table": "nst_alt_name"},
        ),
        migrations.AddField(
            model_name="nstadminemail",
            name="city",
            field=models.ForeignKey(
                blank=True,
                db_column="city",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="nestlist.NstMetropolisMajor",
            ),
        ),
    ]
